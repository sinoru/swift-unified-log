name: Test

on:
  push:
    paths:
      - '.github/workflows/test.yml'
      - '**/*.swift'
  pull_request:
    paths:
      - '.github/workflows/test.yml'
      - '**/*.swift'

env:
  APPLE_ID: "bot@sinoru.io"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        operating-system: ["ubuntu-18.04", "ubuntu-20.04", "macos-11", "macos-12"]
        swift-version: ["5.3.3", "5.4.3", "5.5.3", "5.6.1"]
    runs-on: ${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v2
      - uses: sinoru/actions-setup-xcode@v2
        if: ${{ startsWith(matrix.operating-system, 'macos') }}
        with:
          xcode-version: "13.1"
          apple-id: ${{ secrets.APPLE_ID }}
          apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
      - uses: sinoru/actions-setup-swift@v2
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Build
        run: swift build
        env:
          SWIFT_VERSION: ${{ matrix.swift-version }}
      - name: Run tests
        run: swift test --enable-test-discovery
        env:
          SWIFT_VERSION: ${{ matrix.swift-version }}

  test-xcode:
    strategy:
      fail-fast: false
      matrix:
        operating-system: ["macos-11", "macos-12"]
        xcode-version: ["12.0.1", "12.5.1", "13.0", "13.3.1"]
        xcode-destination: [
          "platform=OS X,arch=x86_64",
          "platform=OS X,arch=x86_64,variant=Mac Catalyst",
          "platform=iOS Simulator,name=iPhone 8,OS=latest",
          "platform=tvOS Simulator,name=Apple TV 4K (2nd generation),OS=latest",
          "platform=watchOS Simulator,name=Apple Watch Series 5 - 44mm,OS=latest",
        ]
        exclude:
          - operating-system: macos-11
            xcode-version: "13.3.1"
          - xcode-version: "12.0.1"
            xcode-destination: "platform=OS X,arch=x86_64,variant=Mac Catalyst"
          - xcode-version: "12.5.1"
            xcode-destination: "platform=OS X,arch=x86_64,variant=Mac Catalyst"
          - xcode-version: "13.0"
            xcode-destination: "platform=OS X,arch=x86_64,variant=Mac Catalyst"
    runs-on: ${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v2
      - uses: sinoru/actions-setup-xcode@v2
        with:
          xcode-version: ${{ matrix.xcode-version }}
          apple-id: ${{ secrets.APPLE_ID }}
          apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
      - name: Resolve Package Dependencies
        run: xcodebuild -resolvePackageDependencies
      - name: Analyze
        run: xcodebuild -scheme swift-unified-log -destination '${{ matrix.xcode-destination }}' analyze
      - name: Test
        run: xcodebuild -scheme swift-unified-log -destination '${{ matrix.xcode-destination }}' test
